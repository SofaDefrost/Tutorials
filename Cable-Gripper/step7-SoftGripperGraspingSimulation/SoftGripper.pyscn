import Sofa

import os
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/'

def createScene(rootNode):
		rootNode.findData('gravity').value='-981.0 0 0';
		rootNode.findData('dt').value="0.01"
		rootNode.createObject('RequiredPlugin', pluginName='SoftRobots')
		rootNode.createObject('VisualStyle', displayFlags='showVisualModels hideBehaviorModels hideCollisionModels hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe')

		rootNode.createObject('BackgroundSetting', color='0 0.168627 0.211765')
		rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight")

		###################################################################
		# Direct simulation
		###################################################################
		rootNode.createObject('FreeMotionAnimationLoop')
		rootNode.createObject('GenericConstraintSolver', printLog='0', tolerance="1e-6", maxIterations="1000")
		rootNode.createObject('CollisionPipeline', verbose="0")
		rootNode.createObject('BruteForceDetection', name="N2")
		rootNode.createObject('RuleBasedContactManager', name="Response", response="FrictionContact", rules="0 * FrictionContact?mu=0.8" )
		rootNode.createObject('LocalMinDistance', name="Proximity", alarmDistance="4", contactDistance="3", angleCone="0.01")

		###################################################################
		# Control of the robot with the keyboard
		rootNode.createObject('PythonScriptController', filename="controllerGripper.py", classname="controller")
		directSimuNode= rootNode
		###################################################################


		################################ Fix Floor ################################

		planeNode = directSimuNode.createChild('Plane')
		planeNode.createObject('MeshObjLoader', name='loader', filename="mesh/floorFlat.obj", triangulate="true", rotation="0 0 270", scale =10, translation="38 0 0")
		planeNode.createObject('Mesh', src="@loader")
		planeNode.createObject('MechanicalObject', src="@loader")
		planeNode.createObject('Triangle',simulated="0", moving="0")
		planeNode.createObject('Line',simulated="0", moving="0")
		planeNode.createObject('Point',simulated="0", moving="0")
		planeNode.createObject('MeshObjLoader', name="Loader", filename="mesh/floorFlat.obj")
		planeNode.createObject('OglModel',name="Visual", src="@Loader", color="1 0 0 1",rotation="0 0 270", scale =10, translation="38.1 0 0")



		################################ Grasped Object ###################################

		# mechanics
		cube =directSimuNode.createChild('cube')
		cube.createObject('EulerImplicit', name='odesolver')
		cube.createObject('CGLinearSolver', name='linearSolver')
		cube.createObject('MechanicalObject', template="Rigid", scale="6", dx="67.0", dy="10", dz="8", rx="10" ,ry="10")
		cube.createObject('UniformMass', vertexMass='0.03 10 1000 0 0 0 1000 0 0 0 1000')
		cube.createObject('UncoupledConstraintCorrection')

		#collision
		cubeCollis = cube.createChild('cubeCollis')
		cubeCollis.createObject('MeshObjLoader', name="loader", filename="mesh/smCube27.obj", triangulate="true",  scale="6")
		cubeCollis.createObject('Mesh', src="@loader")
		cubeCollis.createObject('MechanicalObject')
		cubeCollis.createObject('Triangle')
		cubeCollis.createObject('Line')
		cubeCollis.createObject('Point')
		cubeCollis.createObject('RigidMapping')

		#visualization
		cubeVisu = cube.createChild('cubeVisu')
		cubeVisu.createObject('MeshObjLoader', name="Loader", filename="mesh/smCube27.obj")
		cubeVisu.createObject('OglModel', name="Visual", src="@Loader", color="0.0 0.1 0.5", scale="6.2")
		cubeVisu.createObject('RigidMapping')


		################################ FINGERS ###################################
		translations=[[150,0,0],[150,20,0],[150,20,30]]
		rotations=[[0,0,25],[180,0,-25],[180,0,-25]]
		boxes=[[135,0,0,155,10,15],[135,10,-15,155,30,0],[135,10,15,155,30,30]]
		pullPoints=[[150,12.5,2.5],[150,12.5,-2.5],[150,12.5,27.5]]
		for i in range(3):
			finger = rootNode.createChild('finger'+str(i+1))
			finger.createObject('EulerImplicit', name='odesolver')
			finger.createObject('SparseLDLSolver', name='preconditioner')

			finger.createObject('MeshVTKLoader', name='loader', filename=path+'finger.vtk', translation=translations[i], rotation=rotations[i])
			finger.createObject('TetrahedronSetTopologyContainer', src='@loader', name='container')
			finger.createObject('TetrahedronSetTopologyModifier')
			finger.createObject('TetrahedronSetTopologyAlgorithms', template='Vec3d')
			finger.createObject('TetrahedronSetGeometryAlgorithms', template='Vec3d')

			finger.createObject('MechanicalObject', name='tetras', template='Vec3d')
			finger.createObject('UniformMass', totalMass='0.5')
			finger.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', method='large', poissonRatio='0.3',  youngModulus='18000')

			finger.createObject('BoxROI', name='boxROI', box=boxes[i], drawBoxes='true', doUpdate="0")
			finger.createObject('RestShapeSpringsForceField', points='@boxROI.indices', stiffness='1e12')

			finger.createObject('LinearSolverConstraintCorrection')

			#finger/actuator
			actuator = finger.createChild('actuator'+str(i+1))
			actuator.createObject('MechanicalObject', name="actuatorPoint", translation=translations[i], rotation=rotations[i],
				position=("-103.071  7.36479  7.14143" +

					" -17.5 12.5 2.5 " +
					" -32.5 12.5 2.5 " +
					" -47.5 12.5 2.5 " +
					" -62.5 12.5 2.5 " +
					" -77.5 12.5 2.5 " +

					" -83.5 12.5 4.5 " +
					" -85.5 12.5 6.5 " +
					" -85.5 12.5 8.5 " +
					" -83.5 12.5 10.5 " +

					" -77.5 12.5 12.5 " +
					" -62.5 12.5 12.5 " +
					" -47.5 12.5 12.5 " +
					" -32.5 12.5 12.5 " +
					" -17.5 12.5 12.5 " ))

			actuator.createObject('CableConstraint', template='Vec3d', name='cc'+str(i+1), indices='1 2 3 4 5 6 7 8 9 10 11 12 13 14', pullPoint=pullPoints[i])
			actuator.createObject('BarycentricMapping', mapForces="false", mapMasses="false")

			#finger/fingerVisu
			fingerVisu = finger.createChild('visu')
			fingerVisu.createObject('MeshSTLLoader', name="loader", filename=path+"finger.stl")
			fingerVisu.createObject('OglModel', src="@loader", template='ExtVec3f', color="0.0 0.7 0.7", translation=translations[i], rotation=rotations[i])
			fingerVisu.createObject('BarycentricMapping')

			#finger/fingerCollis
			fingerCollis = finger.createChild('collis')
			fingerCollis.createObject('MeshSTLLoader', name='loader', filename=path+'finger.stl', translation=translations[i], rotation=rotations[i])
			fingerCollis.createObject('TriangleSetTopologyContainer', src='@loader', name='container')
			fingerCollis.createObject('MechanicalObject', name='collisMO', template='Vec3d')
			fingerCollis.createObject('Triangle')
			fingerCollis.createObject('Line')
			fingerCollis.createObject('Point')
			fingerCollis.createObject('BarycentricMapping')

		return rootNode
